openapi: 3.0.0
servers:
  - url: 'https://{env}-sg.portal.hocvienconggiao.com'
    variables:
      env:
        enum:
          - dev
          - prod
        default: dev
  
info:
  description: >-
    This is a sample server Saint info server. For this sample, you can use the api key
    `special-key` to test the authorization filters.
  version: 0.6.0
  title: OpenAPI Saint info
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: saint
    description: Everything about your Saints
paths:
  /mutation-api/saint-service/saints:
    post:
      tags:
        - saint
      summary: Add new saint
      description: ''
      operationId: addSaint
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saint'
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/SaintRequest'
      security:
        - saint_auth: []
  /query-api/saint-service/saints:
    get:
      tags:
        - saint
      summary: Get all saints
      description: Returns all saints
      operationId: getAllSaints
      parameters:
        - in: query
          name: gender
          schema:
            $ref: '#/components/schemas/Gender'
        - in: query
          name: displayName
          schema:
            type: string
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
          required: false
          description: The number of saints to skip before starting to collect the result set.
        - in: query
          name: count
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          required: false
          description: The number of saints to return.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaintCollection'
        '400':
          description: Invalid ID supplied
        '404':
          description: Saint not found
  /query-api/saint-service/saints/{id}:
    get:
      tags:
        - saint
      summary: Find saint by ID
      description: Returns a single saint
      operationId: get_saint_by_id
      parameters:
        - name: id
          in: path
          description: ID of saint to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saint'
        '400':
          description: Invalid ID supplied
        '404':
          description: Saint not found
  /mutation-api/saint-service/saints/{id}:
    put:
      tags:
        - saint
      summary: Update an existing saint
      description: ''
      operationId: update_saint
      parameters:
        - name: id
          in: path
          description: ID of saint to update
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saint'
        '400':
          description: Invalid ID supplied
        '404':
          description: Saint not found
        '405':
          description: Validation exception
      requestBody:
        $ref: '#/components/requestBodies/SaintRequest'
      security:
        - saint_auth: []
    delete:
      tags:
        - saint
      summary: Deletes a saint
      description: ''
      operationId: delete_saint
      parameters:
        - name: id
          in: path
          description: ID of saint to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Saint not found
      security:
        - saint_auth: []
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  requestBodies:
    SaintArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Saint'
      description: List of saint object
      required: true
    SaintRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Saint'
      description: Saint object that needs to be added to the database
      required: true
  securitySchemes:
    saint_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Gender:
      type: string
      enum:
        - MALE
        - FEMALE
    Saint:
      title: Saint
      description: Saint info
      type: object
      required:
        - vietnameseName
        - displayName
        - gender
        - feastDay
      properties:
        id:
          type: string
          format: uuid        
        displayName:
          type: string
          example: Anrê          
        englishName:
          type: string
          example: Andrew
        frenchName:
          type: string
          example: André
        latinName:
          type: string
          example: Andreas
        vietnameseName:
          type: string
          example: Anrê
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
        feastDay:
          type: string
          pattern: '^\d{2}-\d{2}$'
          example: 31-12
          description: feast day in format DD-MM
      xml:
        name: Saint
    SaintCollection:
      properties:
        saints:
          type: array
          items:
            $ref: '#/components/schemas/Saint'
        hasMore:
          type: boolean
        total:
          type: integer

security:
  - saint_auth: []
