openapi: 3.0.0
servers:
  - url: 'http://petstore.swagger.io'
info:
  description: >-
    Student Application API
  version: 1.0.0
  title: Student Application API
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: pet
    description: Everything about your Pets
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
paths:
  /public-api/applications:
    post:
      tags:
        - student-application
      summary: Prospective Student applying for a new course
      description: ''
      operationId: addApplication
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        $ref: '#/components/requestBodies/ApplicationRequest'
  /public-api/applications/{applicationId}:
    put:
      tags:
        - student-application
      summary: Update an existing application
      description: ''
      operationId: updateApplication
      parameters:
        - name: applicationId
          in: path
          description: ID of application to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        $ref: '#/components/requestBodies/ApplicationRequest'
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  requestBodies:
    ApplicationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
      description: Pet object that needs to be added to the store
      required: true
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
  schemas:
    LegalIdentification:
      title: Legal Identification
      description: So CMND/Passport
      type: object
      properties:
        number:
          type: string
        issuedOn:
          type: date
        issuedAt:
          type: string
          example: Cong An Quan 3
    ContactInfo:
      title: Contact Info
      description: Thong tin lien lac
      type: object
      properties:
        address:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
    Language:
      title: Language spoken
      description: Ngon ngu
      type: object
      properties:
        level:
          type: string
          enum:
            - ELEMENTARY
            - INTERMEDIATE
            - ADVANCED
        name:
          type: string
    Education:
      title: Qualifications
      description: Da hoan thanh chuong trinh
      type: object
      properties:
        level:
          type: string
          enum:
            - SECONDARY
            - UNDERGRADUATE
            - MASTER
            - DOCTORATE
    StudyProgram:
      title: Study Program to enrol
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        level:
          type: string
          enum:
            - FOUNDATION
            - BACHELOR
            - MASTER
            - UNKNOWN

    Application:
      title: an application
      description: An application for a prospective student to submit
      type: object
      required:
        - name
        - photoUrls
      properties:
        id:
          type: integer
          format: int64
        legalIdentification:
          $ref: '#/components/schemas/LegalIdentification'
        contactInfo:
          $ref: '#/components/schemas/ContactInfo'
        languages:
          type: array
          xml:
            name: languages
            wrapped: true
          items:
            $ref: '#/components/schemas/Language'
        program:
          type: object
          $ref: '#/components/schemas/StudyProgram'
        name:
          type: string
          example: Le Thanh Binh
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
        dateOfBirth:
          type: string
          format: date
        placeOfBirth:
          type: string
          example: Ha Tinh
        religiousStatus:
          type: string
          enum:
            - PRIEST
            - SEMINARIST
            - MONK_OR_NUN
            - LAY_PERSON
        religiousFormationStageForMonkOrNun:
          type: string
          enum:
            - POSTULANT
            - NOVITIATE
            - TEMPORARILY_PROFESSED
            - PERPETUALLY_PROFESSED
        diocese:
          type: string
        parish:
          type: string
        monastery:
          type: string
        nationality:
          type: string
        ethnicity:
          type: string

        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: Application
    ApiResponse:
      title: An uploaded response
      description: Describes the result of uploading an image resource
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string