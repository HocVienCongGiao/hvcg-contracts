openapi: 3.0.0
servers:
  - url: 'https://{env}-sg.portal.hocvienconggiao.com'
    variables:
      env:
        enum:
          - dev
          - prod
        default: dev
  
info:
  description: >-
    This is a API for identity.
  version: 0.1.2
  title: OpenAPI Indentity info
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: iam-users
    description: Everything about users
paths:
  /query-api/identity-service/users:
    get:
      tags:
        - query-user
      summary: Get users infomation
      description: Returns a single user
      operationId: query-users
      parameters:
        - in: query
          name: username
          schema:
            type: string
          description: The user name
        - in: query
          name: phone
          schema:
            type: string
          description: The user phone number
        - in: query
          name: email
          schema:
            type: string
          description: The user email
        - in: query
          name: enabled
          schema:
            type: boolean
          description: The user status
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
          description: The number of users to skip before starting to collect the result set.
        - in: query
          name: count
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: The number of users to return.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollection'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
      security:
        - user_auth: []
  /query-api/identity-service/users/{id}:
    get:
      tags:
        - query-user
      summary: Get user infomation by id
      description: Returns a single user
      operationId: query-user-by-id
      parameters:
        - name: id
          in: path
          description: The user id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
      security:
        - user_auth: []
  /mutation-api/identity-service/users/update-password:
    put:
      tags:
        - mutation-user
      summary: update password
      description: Update user password
      operationId: update-password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plainPassword:
                  type: string
                id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
      security:
        - user_auth: []
  /mutation-api/identity-service/users/deactivation:
    post:
      tags:
        - mutation-user
      summary: Deactive user
      description: Deactivate user
      operationId: deactivate_user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
      security:
        - user_auth: []
  /mutation-api/identity-service/users/activation:
    post:
      tags:
        - mutation-user
      summary: Activate a user
      description: Activate user
      operationId: activate_user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
      security:
        - user_auth: []
  /mutation-api/identity-service/users:
    post:
      tags:
        - mutation-user
      summary: Create user
      description: Create user
      operationId: create-user
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
      security:
        - user_auth: [ ]
  /mutation-api/identity-service/users/{id}:
    put:
      tags:
        - mutation-user
      summary: Update an existing user
      description: ''
      operationId: update_user
      parameters:
        - name: id
          in: path
          description: ID of user to update
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: Saint not found
        '405':
          description: Validation exception
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      security:
        - user_auth: [ ]
    delete:
      tags:
        - saint
      summary: Deletes a saint
      description: ''
      operationId: delete_saint
      parameters:
        - name: id
          in: path
          description: ID of saint to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Saint not found
      security:
        - saint_auth: [ ]
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  requestBodies:
    UserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
      description: User object that needs to be added to the database
      required: true
  securitySchemes:
    user_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      title: User
      description: User info
      type: object
      required:
        - username
      properties:
        id:
          type: string
          format: uuid        
        username:
          type: string
        email:
          type: string
        phone:
          type: string
          pattern: '^\+\d{2} .*$'
        enabled:
          type: boolean
        group:
          $ref: '#/components/schemas/Group'
    UserCollection:
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        hasMore:
          type: boolean
    Group:
      title: Group
      description: The cognito user groups.
      type: string
      enum:
        - ADMIN_GROUP
        - OPERATOR_GROUP
        - PROFESSOR_GROUP
        - STUDENT_GROUP
        - UNKNOWN
security:
  - user_auth: []
