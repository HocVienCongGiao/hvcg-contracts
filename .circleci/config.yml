--- 
version: 2.1
orbs: 
  browser-tools: circleci/browser-tools@1.1.3
  aws-s3: circleci/aws-s3@2.0.0
  rust: circleci/rust@1.5.0
  
jobs:
  generate_crate:
    docker:
      - image: cimg/openjdk:16.0.0
    steps:
      - checkout
      - run: "mkdir -p workspace/rust-openapi/.cargo"
      - run: "cp .cargo/config.toml ./workspace/rust-openapi/.cargo"
      - run:
          command: |
            files=`git diff-tree --no-commit-id --name-only -r HEAD`
            for file in $files; do
            if [[ $file == contracts* ]]; then
            filename=$(basename $file)
            entity_name=${filename%.*}
            echo "Entity NAME is " + $entity_name
            echo "yes"; 
            bounded_context=$(basename $(dirname $(dirname $file)))
            echo "Bounded Context name is " + $bounded_context
            java -jar ./bin/openapi-generator-cli.jar generate -i ./contracts/${bounded_context}/openapi/${entity_name}.yaml -g rust-server -o workspace/rust-openapi/${bounded_context}_openapi_$entity_name --package-name=hvcg_${bounded_context}_openapi_${entity_name}
            fi
            done
          name: "Generate Rust sources"
      - 
        run: "ls workspace/rust-openapi"

      # Persist the specified paths (workspace/rust_api_server_example_openapi_entity) into the workspace for use in downstream job.
      - 
        persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: workspace
          # Must be relative path from root
          paths:
            - rust-openapi

    working_directory: ~/hvcg-contracts

  publish_crate:
    docker:
      - image: cimg/rust:1.52.1
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: workspace
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y libssl-dev
      - run:
          command: 
            files=`ls workspace/rust-openapi`
            for file in $files; do
            filename=$(basename $file)
            entity_name=${filename%.*}
            echo "Entity NAME is " + $entity_name
              
            cd ~/hvcg-contracts/workspace/rust-openapi/$filename
            cargo package
            curl -u $ARTIFACTORY_USERNAME:$ARTIFACTORY_PASSWORD -XPUT "https://hocvienconggiao.jfrog.io/artifactory/cargo-local/crates/hvcg_${filename}/hvcg_${filename}-1.0.0.crate" -T ./target/package/hvcg_${filename}-1.0.0.crate
            done
          name: "Publish crate"
      
    working_directory: ~/hvcg-contracts

  push_contracts: 
    docker: 
      - 
        image: "cimg/node:10.24.0"
    steps:
      - checkout
      - 
        run: 
          command: "echo ${CIRCLE_BRANCH}"
          name: "Show current branch"
      - 
        restore_cache: 
          keys: 
            - "v1-dependencies-{{ checksum \"package-lock.json\" }}"
            - v1-dependencies-
      - 
        run: 
          command: "cp -R ./contracts ./swaggerui/"
      - 
        aws-s3/sync:
          arguments: |
              --delete \
              --acl public-read \
              --cache-control 'max-age=604800' \
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: swaggerui
          to: s3://swaggerui.hocvienconggiao.com        
    working_directory: ~/hvcg-contracts    

workflows: 
  push: 
    jobs:
      - generate_crate:
          context: build_push
          filters: 
            branches: 
              only: 
                - main           
      - publish_crate:
          context: build_push
          filters: 
            branches: 
              only: 
                - main           
          requires:
            - generate_crate
      # - push_contracts:
      #     context: build_push
      #     filters: 
      #       branches: 
      #         only: 
      #           - main           
      #     requires:
      #       - publish_crate
                
  version: 2
